{"version":3,"sources":["components/Simulation/Legend.module.css","components/Simulation/Chart/CandlestickBar.module.css","components/Simulation/Chart/Grid.module.css","components/Simulation/Chart/TradeMarker.module.css","components/Simulation/Trades.module.css","components/Header.module.css","components/Simulation/Chart/NowMarker.module.css","components/Simulation/Chart/BackgroundBars.module.css","components/Simulation/ChartControls.module.css","components/Description.module.css","components/App.module.css","components/Simulation/Simulation.module.css","components/Simulation/Chart/Chart.module.css","components/Simulation/XAxis.module.css","components/Header.tsx","components/Simulation/Chart/TradeMarker.tsx","components/Simulation/Legend.tsx","components/Simulation/Chart/CandlestickBar.tsx","components/Simulation/Chart/CandlestickBars.tsx","components/Simulation/Chart/TradeMarkers.tsx","components/Simulation/Chart/NowMarker.tsx","components/Simulation/Chart/BackgroundBars.tsx","components/Simulation/Chart/Grid.tsx","components/Simulation/Chart/Chart.tsx","components/Simulation/Trades.tsx","components/Simulation/XAxis.tsx","components/Simulation/ChartControls.tsx","components/Simulation/Simulation.tsx","components/Description.tsx","components/App.tsx","index.tsx"],"names":["module","exports","Header","className","styles","header","innerHeader","text","WIDTH","HEIGHT","TradeMarker","props","originX","originY","topMiddleX","topMiddleY","isFocal","isSelected","isBackground","tradeNumber","halfWidth","undefined","polygonPoints","polygonClassNames","tradeMarker","push","focal","dimmed","tradeLine","data-testid","x1","y1","x2","y2","join","points","map","point","Legend","legend","entry","symbol","pattern","base","similar","width","height","style","display","currentLine","CandlestickBar","date","open","high","low","close","barWidth","xScale","yScale","isCompleted","x","isUpBar","classNames","bar","up","down","highLowLine","openCloseRect","y","CandlestickBars","ohlcData","simulationIndex","d","i","key","TradeMarkers","trades","currentTradeIndex","focalTradeIndex","selectedTradeIndex","startIndex","Math","min","NowMarker","nowMarker","nowLine","BackgroundBars","onBarMouseOver","onBarMouseOut","onBarClick","barsBack","isBase","isSimilar","filter","idx","length","backgroundBar","onClick","bind","onMouseOver","onMouseOut","Grid","chartWidth","chartHeight","verticalLineStep","horizontalLineStep","grid","verticalGridLines","range","gridLine","horizontalGridLines","Chart","selectedIndex","chart","Trades","onTradeMouseOver","onTradeMouseOut","onTradeClick","timeFormatter","Table","tradesTable","size","hover","startDate","direction","row","arrow","XAxis","xAxis","React","createRef","this","renderAxis","select","current","call","axisBottom","tickFormat","ref","Component","ChartControls","onReset","onContinue","isRunning","isFinished","chartControls","resetButton","variant","continueButton","disabled","Simulation","intrvl","tradeIndicesOnChart","state","rootFontSize","getRootFontSize","mainContentWidthInEm","Set","utcFormat","parseFloat","getComputedStyle","document","documentElement","getPropertyValue","onResize","data","scaleTime","domain","scaleLinear","max","nice","setState","window","setInterval","pause","clearInterval","addEventListener","run","prevProps","prevState","patterns","trade","has","newTrade","add","barIndex","tradeIndex","forEach","index","e","clear","paddingBottom","paddingRight","createXScale","createYScale","simulation","gridArea","Description","description","paragraph","App","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0824a85f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"Legend_legend__3ivFo\",\"entry\":\"Legend_entry__wmF7w\",\"symbol\":\"Legend_symbol__1fDqu\",\"pattern\":\"Legend_pattern__1wuvZ\",\"currentLine\":\"Legend_currentLine__3igZb\",\"base\":\"Legend_base__16RFT\",\"similar\":\"Legend_similar__1SsYv\",\"text\":\"Legend_text__31gth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"CandlestickBar_bar__3RKf7\",\"highLowLine\":\"CandlestickBar_highLowLine__1hV1z\",\"up\":\"CandlestickBar_up__19olx\",\"down\":\"CandlestickBar_down__NJAgU\",\"openCloseRect\":\"CandlestickBar_openCloseRect__32nSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridLine\":\"Grid_gridLine__1P3C9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tradeMarker\":\"TradeMarker_tradeMarker__2-EP3\",\"focal\":\"TradeMarker_focal__1YH8N\",\"dimmed\":\"TradeMarker_dimmed__1E2ik\",\"tradeLine\":\"TradeMarker_tradeLine__48P99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trades\":\"Trades_trades__URMEh\",\"row\":\"Trades_row__3Vken\",\"arrow\":\"Trades_arrow__1Ptfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"innerHeader\":\"Header_innerHeader__2hrfK\",\"text\":\"Header_text__2ZAsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nowLine\":\"NowMarker_nowLine__2vPQJ\",\"dimmed\":\"NowMarker_dimmed__2lKDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundBar\":\"BackgroundBars_backgroundBar__1_bj4\",\"base\":\"BackgroundBars_base__3gAqW\",\"similar\":\"BackgroundBars_similar__1NliH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartControls\":\"ChartControls_chartControls__1lI3J\",\"button\":\"ChartControls_button__3FKhD\",\"resetButton\":\"ChartControls_resetButton__19ykP ChartControls_button__3FKhD\",\"continueButton\":\"ChartControls_continueButton__24T7l ChartControls_button__3FKhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__1mAW6\",\"paragraph\":\"Description_paragraph__MB3c1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simulation\":\"Simulation_simulation__3z02y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__2EVgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xAxis\":\"XAxis_xAxis__2uXbT\"};","import React from 'react';\nimport styles from './Header.module.css';\n\nexport default function Header() {\n  return (\n    <header className={styles.header}>\n      <div className={styles.innerHeader}>\n        <h1 className={styles.text}>\n          OptimalFX\n          <small className=\"text-muted\">Algorithmic Forex Trading</small>\n        </h1>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\nimport styles from './TradeMarker.module.css';\n\nconst WIDTH = 12;\nconst HEIGHT = 10;\n\nexport function getWidth() {\n  return WIDTH;\n}\nexport function getHeight() {\n  return HEIGHT;\n}\n\nexport default function TradeMarker(props) {\n  let {\n    originX,\n    originY,\n    topMiddleX,\n    topMiddleY,\n    isFocal,\n    isSelected,\n    isBackground,\n    tradeNumber,\n  } = props;\n  let halfWidth = WIDTH / 2;\n\n  if (topMiddleX === undefined) {\n    topMiddleX = (originX || 0) + halfWidth;\n  }\n  if (topMiddleY === undefined) {\n    topMiddleY = originY || 0;\n  }\n\n  let polygonPoints = [\n    [topMiddleX, topMiddleY],\n    [topMiddleX - halfWidth, topMiddleY + HEIGHT],\n    [topMiddleX + halfWidth, topMiddleY + HEIGHT],\n  ];\n  let polygonClassNames = [styles.tradeMarker];\n  if (isFocal) {\n    polygonClassNames.push(styles.focal);\n  }\n  if (isBackground) {\n    polygonClassNames.push(styles.dimmed);\n  }\n\n  return (\n    <g>\n      {isSelected && (\n        <line\n          className={styles.tradeLine}\n          data-testid={`trade-line-${tradeNumber}`}\n          x1={topMiddleX}\n          y1={0}\n          x2={topMiddleX}\n          y2=\"100%\"\n        ></line>\n      )}\n      <polygon\n        className={polygonClassNames.join(' ')}\n        points={polygonPoints.map(point => point.join(',')).join(' ')}\n      />\n    </g>\n  );\n}\n","import React from 'react';\nimport styles from './Legend.module.css';\nimport TradeMarker, { getWidth, getHeight } from './Chart/TradeMarker';\n\nexport default function Legend() {\n  return (\n    <div className={styles.legend}>\n      <div className={styles.entry}>\n        <div\n          className={`${styles.symbol} ${styles.pattern} ${styles.base}`}\n        ></div>\n        <div className={styles.text}>Base Pattern</div>\n      </div>\n      <div className={styles.entry}>\n        <div\n          className={`${styles.symbol} ${styles.pattern} ${styles.similar}`}\n        ></div>\n        <div className={styles.text}>Matching Pattern</div>\n      </div>\n      <div className={styles.entry}>\n        <div className={`${styles.symbol}`}>\n          <svg\n            width={getWidth()}\n            height={getHeight()}\n            style={{ display: 'block' }}\n          >\n            <TradeMarker />\n          </svg>\n        </div>\n        <div className={styles.text}>Start of Trade</div>\n      </div>\n      <div className={styles.entry}>\n        <div className={`${styles.symbol} ${styles.currentLine}`}></div>\n        <div className={styles.text}>Current time (in simulation)</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './CandlestickBar.module.css';\n\nexport default function CandlestickBar(props) {\n  let {\n    date,\n    open,\n    high,\n    low,\n    close,\n    barWidth,\n    xScale,\n    yScale,\n    isCompleted,\n  } = props;\n  let x = xScale(date);\n  let isUpBar = close > open;\n\n  let classNames = [styles.bar];\n  if (isCompleted) {\n    classNames.push(isUpBar ? styles.up : styles.down);\n  }\n\n  return (\n    <g className={classNames.join(' ')}>\n      <line\n        className={styles.highLowLine}\n        x1={x + barWidth / 2}\n        y1={yScale(high)}\n        x2={x + barWidth / 2}\n        y2={yScale(low)}\n      ></line>\n      <rect\n        className={styles.openCloseRect}\n        x={x}\n        y={isUpBar ? yScale(close) : yScale(open)}\n        width={barWidth - 1} //subtract 1 so that there is visual spacing between the bars\n        height={\n          isUpBar ? yScale(open) - yScale(close) : yScale(close) - yScale(open)\n        }\n      ></rect>\n    </g>\n  );\n}\n","import React from 'react';\nimport CandlestickBar from './CandlestickBar';\n\nexport default function CandlestickBars(props) {\n  let { ohlcData, simulationIndex, xScale, yScale, barWidth } = props;\n  return (\n    <g>\n      {ohlcData.map((d, i) => (\n        <CandlestickBar\n          {...{\n            key: i,\n            ...d,\n            xScale,\n            yScale,\n            barWidth,\n            isCompleted: i <= simulationIndex,\n          }}\n        />\n      ))}\n    </g>\n  );\n}\n","import React from 'react';\nimport TradeMarker from './TradeMarker';\n\nexport default function TradeMarkers(props) {\n  let {\n    trades,\n    ohlcData,\n    xScale,\n    yScale,\n    currentTradeIndex,\n    focalTradeIndex,\n    selectedTradeIndex,\n  } = props;\n  return (\n    <g>\n      {trades.map(({ startIndex }, i) => {\n        let isFocal = focalTradeIndex === startIndex;\n        let isSelected = selectedTradeIndex === startIndex;\n        return (\n          <TradeMarker\n            {...{\n              key: startIndex,\n              tradeNumber: i + 1,\n              topMiddleX: xScale(ohlcData[startIndex].date),\n              //set the trade marker slightly under than lower of the two bars it sits between\n              topMiddleY:\n                yScale(\n                  Math.min(\n                    ohlcData[startIndex].low,\n                    ohlcData[startIndex - 1].low\n                  )\n                ) + 5,\n              isFocal,\n              isSelected,\n\n              //this trade marker is background if...\n              isBackground:\n                !isFocal &&\n                //1) another trade marker is selected\n                ((selectedTradeIndex > 0 && !isSelected) ||\n                  //2) OR I'm not selected AND a trade marker other than the current one is focal\n                  (!isSelected &&\n                    focalTradeIndex > 0 &&\n                    focalTradeIndex !== currentTradeIndex)),\n            }}\n          />\n        );\n      })}\n    </g>\n  );\n}\n","import React from 'react';\nimport styles from './NowMarker.module.css';\n\nexport default function NowMarker(props) {\n  let { x, dimmed } = props;\n  return (\n    <g className={styles.nowMarker}>\n      <line\n        className={`${styles.nowLine}${dimmed ? ` ${styles.dimmed}` : ''}`}\n        x1={x}\n        y1={0}\n        x2={x}\n        y2=\"100%\"\n      ></line>\n    </g>\n  );\n}\n","import React from 'react';\nimport styles from './BackgroundBars.module.css';\n\nexport default function BackgroundBars(props) {\n  let {\n    ohlcData,\n    xScale,\n    barWidth,\n    pattern,\n    onBarMouseOver,\n    onBarMouseOut,\n    onBarClick,\n  } = props;\n  let { barsBack, base, similar } = pattern || {};\n  return (\n    <g>\n      {ohlcData.map(({ date }, i) => {\n        let x = xScale(date);\n        let isBase = base && base - barsBack < i && i <= base;\n        let isSimilar =\n          similar &&\n          similar.filter(idx => idx - barsBack < i && i <= idx).length > 0;\n\n        let classNames = [styles.backgroundBar];\n        if (isBase) {\n          classNames.push(styles.base);\n        } else if (isSimilar) {\n          classNames.push(styles.similar);\n        }\n\n        return (\n          <rect\n            key={i}\n            className={classNames.join(' ')}\n            x={x}\n            y={0}\n            width={barWidth}\n            height=\"100%\"\n            //todo: maybe don't attach a click/mouseover/out listener if the bar is not one of the trade bars (to avoid doing unnecessary work)\n            onClick={onBarClick.bind(null, i)}\n            onMouseOver={onBarMouseOver.bind(null, i)}\n            onMouseOut={onBarMouseOut.bind(null, i)}\n          ></rect>\n        );\n      })}\n    </g>\n  );\n}\n","import React from 'react';\nimport styles from './Grid.module.css';\nimport { range } from 'lodash';\n\nexport default function Grid(props) {\n  let { chartWidth, chartHeight } = props;\n\n  let numVerticalGridLines = 7;\n  let numHorizontalGridLines = 5;\n  let verticalLineStep = chartWidth / numVerticalGridLines;\n  let horizontalLineStep = chartHeight / numHorizontalGridLines;\n\n  return (\n    <g className={styles.grid}>\n      <g className={styles.verticalGridLines}>\n        {range(verticalLineStep, chartWidth, verticalLineStep).map(i => (\n          <line\n            key={i}\n            className={styles.gridLine}\n            x1={i}\n            y1={0}\n            x2={i}\n            y2=\"100%\"\n          />\n        ))}\n      </g>\n      <g className={styles.horizontalGridLines}>\n        {range(horizontalLineStep, chartHeight, horizontalLineStep).map(i => (\n          <line\n            key={i}\n            className={styles.gridLine}\n            x1={0}\n            y1={i}\n            x2=\"100%\"\n            y2={i}\n          />\n        ))}\n      </g>\n    </g>\n  );\n}\n","import React from 'react';\nimport styles from './Chart.module.css';\nimport CandlestickBars from './CandlestickBars';\nimport TradeMarkers from './TradeMarkers';\nimport NowMarker from './NowMarker';\nimport BackgroundBars from './BackgroundBars';\nimport Grid from './Grid';\n\nexport default function Chart(props) {\n  let {\n    chartWidth,\n    chartHeight,\n    ohlcData,\n    xScale,\n    yScale,\n    barWidth,\n    simulationIndex,\n    selectedIndex,\n    pattern,\n    trades,\n    focalTradeIndex,\n    onBarMouseOver,\n    onBarMouseOut,\n    onBarClick,\n  } = props;\n\n  return (\n    <div className={styles.chart}>\n      <svg width={chartWidth} height={chartHeight}>\n        <BackgroundBars\n          {...{\n            ohlcData,\n            xScale,\n            barWidth,\n            pattern,\n            onBarMouseOver,\n            onBarMouseOut,\n            onBarClick,\n          }}\n        />\n        <Grid {...{ chartWidth, chartHeight }} />\n        <CandlestickBars\n          {...{\n            ohlcData,\n            simulationIndex,\n            xScale,\n            yScale,\n            barWidth,\n          }}\n        />\n        <NowMarker\n          x={\n            ohlcData[simulationIndex]\n              ? xScale(ohlcData[simulationIndex].date) + barWidth\n              : 0\n          }\n          dimmed={selectedIndex > -1 || simulationIndex === ohlcData.length - 1}\n        />\n        <TradeMarkers\n          {...{\n            trades,\n            ohlcData,\n            xScale,\n            yScale,\n            currentTradeIndex: simulationIndex + 1,\n            focalTradeIndex,\n            selectedTradeIndex: selectedIndex + 1,\n          }}\n        />\n      </svg>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './Trades.module.css';\nimport { Table } from 'react-bootstrap';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nexport default function Trades(props) {\n  let {\n    trades,\n    onTradeMouseOver,\n    onTradeMouseOut,\n    onTradeClick,\n    timeFormatter,\n  } = props;\n\n  return (\n    <div className={styles.trades}>\n      <h5>Trades</h5>\n      <Table className={styles.tradesTable} size=\"sm\" hover>\n        <thead>\n          <tr>\n            <th style={{ width: '22%' }}></th>\n            <th style={{ width: '32%' }}>Time</th>\n            <th style={{ width: '46%' }}>Direction</th>\n          </tr>\n        </thead>\n        <tbody>\n          {trades.map(({ startIndex, startDate, direction }, i) => (\n            <tr\n              key={startIndex}\n              data-testid={`trade-row-${i + 1}`}\n              className={styles.row}\n              onMouseOver={onTradeMouseOver.bind(null, startIndex)}\n              onMouseOut={onTradeMouseOut.bind(null, startIndex)}\n              onClick={onTradeClick.bind(null, startIndex)}\n            >\n              <td>\n                <ChevronRightIcon className={styles.arrow} />\n              </td>\n              <td>{timeFormatter(startDate)}</td>\n              <td>{direction}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { select, axisBottom } from 'd3';\nimport styles from './XAxis.module.css';\n\ninterface Props {\n  xScale: any;\n  timeFormatter: any;\n  width: number;\n}\n\nexport default class XAxis extends Component<Props> {\n  private xAxis;\n\n  constructor(props: Props) {\n    super(props);\n    this.xAxis = React.createRef();\n  }\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis() {\n    select(this.xAxis.current).call(\n      axisBottom(this.props.xScale).tickFormat(this.props.timeFormatter)\n    );\n  }\n\n  render() {\n    let { width } = this.props;\n    return (\n      <svg className={styles.xAxis} width={width} height=\"20\">\n        <g ref={this.xAxis}></g>\n      </svg>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './ChartControls.module.css';\nimport Button from 'react-bootstrap/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\nexport default function ChartControls(props) {\n  let { onReset, onContinue, isRunning, isFinished } = props;\n  return (\n    <div className={styles.chartControls}>\n      <Button\n        className={styles.resetButton}\n        variant=\"outline-dark\"\n        onClick={onReset}\n      >\n        <ReplayIcon /> Reset\n      </Button>\n      <Button\n        className={styles.continueButton}\n        size=\"lg\"\n        onClick={onContinue}\n        disabled={isRunning || isFinished}\n      >\n        Continue\n      </Button>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { scaleTime, scaleLinear, utcFormat } from 'd3';\nimport styles from './Simulation.module.css';\nimport Legend from './Legend';\nimport Chart from './Chart/Chart';\nimport Trades from './Trades';\nimport XAxis from './XAxis';\nimport ChartControls from './ChartControls';\nimport ohlcData from '../../data/ohlc.json';\nimport patterns from '../../data/patterns.json';\n\ninterface Props {}\ninterface State {\n  isRunning: boolean;\n  simulationIndex: number;\n  selectedIndex: number;\n  focalTradeIndex: number;\n  trades: any[];\n  rootFontSize: number;\n}\n\nexport default class Simulation extends Component<Props, State> {\n  intrvl: number | undefined;\n  tradeIndicesOnChart: Set<number>;\n  state: State = {\n    isRunning: false,\n    simulationIndex: -1,\n    selectedIndex: -1,\n    focalTradeIndex: -1,\n    trades: [],\n    rootFontSize: this.getRootFontSize(),\n  };\n  timeFormatter: Function;\n  mainContentWidthInEm: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.tradeIndicesOnChart = new Set();\n    this.timeFormatter = utcFormat('%H:%M');\n    this.mainContentWidthInEm =\n      parseFloat(\n        getComputedStyle(document.documentElement).getPropertyValue(\n          '--main-content-width'\n        )\n      ) || 50; //set a default for tests\n\n    //event listeners bindings\n    this.onResize = this.onResize.bind(this);\n    this.onBarMouseOver = this.onBarMouseOver.bind(this);\n    this.onBarMouseOut = this.onBarMouseOut.bind(this);\n    this.onBarClick = this.onBarClick.bind(this);\n    this.onTradeMouseOver = this.onTradeMouseOver.bind(this);\n    this.onTradeMouseOut = this.onTradeMouseOut.bind(this);\n    this.onTradeClick = this.onTradeClick.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onContinue = this.onContinue.bind(this);\n  }\n\n  getRootFontSize() {\n    return (\n      parseFloat(\n        getComputedStyle(document.documentElement).getPropertyValue('font-size')\n      ) || 16 //set a default for tests\n    );\n  }\n\n  createXScale(data, width) {\n    return scaleTime()\n      .domain([data[0].date, data[data.length - 1].date])\n      .range([0, width]);\n  }\n\n  createYScale(data, height) {\n    return scaleLinear()\n      .domain([\n        Math.min(...data.map(d => d.low)),\n        Math.max(...data.map(d => d.high)),\n      ])\n      .range([height, 0])\n      .nice();\n  }\n\n  run() {\n    this.setState(\n      { isRunning: true },\n      () =>\n        (this.intrvl = window.setInterval(() => {\n          if (this.state.simulationIndex < ohlcData.length - 1) {\n            this.setState(({ simulationIndex }) => {\n              return { simulationIndex: simulationIndex + 1 };\n            });\n          } else {\n            this.pause();\n          }\n        }, 25))\n    );\n  }\n\n  pause() {\n    clearInterval(this.intrvl);\n    this.setState({ isRunning: false });\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n\n    //start the simulation\n    this.run();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    let { simulationIndex } = this.state;\n\n    //if there's a trade at simulationIndex\n    if (patterns[simulationIndex] && patterns[simulationIndex].trade) {\n      //add it to trades\n      let startIndex = simulationIndex + 1; //add 1 because the trade starts at the next bar\n      if (!this.tradeIndicesOnChart.has(startIndex)) {\n        let newTrade = {\n          ...patterns[simulationIndex].trade,\n          startIndex,\n          startDate: ohlcData[startIndex].date,\n        };\n\n        this.tradeIndicesOnChart.add(startIndex);\n        this.setState(({ trades }) => ({\n          trades: [...trades, newTrade],\n        }));\n\n        //stop the simulation\n        this.pause();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.pause();\n  }\n\n  onResize() {\n    this.setState({ rootFontSize: this.getRootFontSize() });\n  }\n\n  onBarMouseOver(barIndex: number) {\n    let tradeIndex = barIndex + 1; //add 1 because the trade starts on the next bar\n\n    //let either of the two bars surrounding the trade indicator\n    //trigger the focal trade\n    let indicesThatCanTriggerFocalTrade = [tradeIndex, tradeIndex - 1];\n    indicesThatCanTriggerFocalTrade.forEach(index => {\n      if (this.tradeIndicesOnChart.has(index)) {\n        this.setState({\n          focalTradeIndex: index,\n        });\n      }\n    });\n  }\n  onBarMouseOut(barIndex: number) {\n    //only setState if barIndex is not -1 already (which it will\n    //be most of the time) (to avoid doing unnecessary work)\n    if (this.state.focalTradeIndex !== -1) {\n      this.setState({\n        focalTradeIndex: -1,\n      });\n    }\n  }\n  onBarClick(barIndex: number) {\n    let tradeIndex = barIndex + 1; //add 1 because the trade starts on the next bar\n\n    //let either of the two bars surrounding the trade indicator\n    //select the trade\n    let indicesThatCanTriggerSelection = [tradeIndex, tradeIndex - 1];\n    indicesThatCanTriggerSelection.forEach(index => {\n      if (this.tradeIndicesOnChart.has(index)) {\n        this.setState(({ simulationIndex }) => ({\n          selectedIndex: index - 1 === simulationIndex ? -1 : index - 1,\n        }));\n      }\n    });\n  }\n\n  onTradeMouseOver(tradeIndex: number) {\n    this.setState({\n      focalTradeIndex: tradeIndex,\n    });\n  }\n  onTradeMouseOut(tradeIndex: number) {\n    this.setState({\n      focalTradeIndex: -1,\n    });\n  }\n  onTradeClick(tradeIndex: number) {\n    //subtract 1 because the \"current bar\" is the one right\n    //before the one the trade starts at\n    this.setState(({ simulationIndex }) => ({\n      selectedIndex: tradeIndex - 1 === simulationIndex ? -1 : tradeIndex - 1,\n    }));\n  }\n  onReset(e) {\n    this.pause();\n    this.tradeIndicesOnChart.clear();\n    this.setState(\n      { simulationIndex: -1, selectedIndex: -1, trades: [] },\n      this.run\n    );\n  }\n  onContinue(e) {\n    this.pause();\n    this.setState({ selectedIndex: -1 }, this.run);\n  }\n\n  render() {\n    let {\n      timeFormatter,\n      mainContentWidthInEm,\n      onBarMouseOver,\n      onBarMouseOut,\n      onBarClick,\n      onTradeMouseOver,\n      onTradeMouseOut,\n      onTradeClick,\n      onReset,\n      onContinue,\n    } = this;\n    let {\n      isRunning,\n      simulationIndex,\n      selectedIndex,\n      trades,\n      focalTradeIndex,\n      rootFontSize,\n    } = this.state;\n    let pattern = patterns[selectedIndex] || patterns[simulationIndex];\n\n    let mainContentWidth = mainContentWidthInEm * rootFontSize;\n    let chartWidth = mainContentWidth * 0.75;\n    let chartHeight = chartWidth * 0.6;\n    let barWidth = chartWidth / ohlcData.length;\n    let paddingBottom = chartHeight * 0.1;\n    let paddingRight = barWidth;\n    let xScale = this.createXScale(\n      ohlcData,\n      chartWidth - barWidth - paddingRight\n    );\n    let yScale = this.createYScale(ohlcData, chartHeight - paddingBottom);\n\n    return (\n      <div className={styles.simulation}>\n        <h3 style={{ gridArea: 'title' }}>Demo</h3>\n        <Legend />\n        <Chart\n          {...{\n            chartWidth,\n            chartHeight,\n            ohlcData,\n            xScale,\n            yScale,\n            barWidth,\n            simulationIndex,\n            selectedIndex,\n            pattern,\n            trades,\n            focalTradeIndex,\n            onBarMouseOver,\n            onBarMouseOut,\n            onBarClick,\n          }}\n        />\n        <Trades\n          {...{\n            trades,\n            onTradeMouseOver,\n            onTradeMouseOut,\n            onTradeClick,\n            timeFormatter,\n          }}\n        />\n        <XAxis {...{ xScale, timeFormatter, width: chartWidth }} />\n        <ChartControls\n          {...{\n            onContinue,\n            onReset,\n            isRunning,\n            isFinished: simulationIndex === ohlcData.length - 1,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Description.module.css';\n\nexport default function Description() {\n  return (\n    <div className={styles.description}>\n      <p className={styles.paragraph}>\n        A trading strategy that compares recent price movements to similar ones\n        from the past. A \"base pattern\" (consisting of two or more\n        recently-completed bars) is matched with similar historical bar patterns\n        to find high-confidence trades.\n      </p>\n      <p className={styles.paragraph}>See a simulation in the demo below.</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.css';\nimport Header from './Header';\nimport Simulation from './Simulation/Simulation';\nimport Description from './Description';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Description />\n      <Simulation />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}